$date
	Tue Jan 10 15:34:29 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testBench $end
$var wire 1 ! rst $end
$var wire 4 " q [3:0] $end
$var wire 1 # clk $end
$scope module aTester $end
$var wire 4 $ qOut [3:0] $end
$var reg 1 # clk $end
$var reg 1 ! rst $end
$upscope $end
$scope module counter $end
$var wire 1 # clk $end
$var wire 1 % d1 $end
$var wire 1 & d2 $end
$var wire 1 ' d3 $end
$var wire 1 ! rst $end
$var wire 4 ( qOut [3:0] $end
$var wire 1 ) d0 $end
$var wire 4 * Qbar [3:0] $end
$scope module ff0 $end
$var wire 1 ) D $end
$var wire 1 # clk $end
$var wire 1 + qBar $end
$var wire 1 ! rst $end
$var reg 1 , q $end
$upscope $end
$scope module ff1 $end
$var wire 1 % D $end
$var wire 1 # clk $end
$var wire 1 - qBar $end
$var wire 1 ! rst $end
$var reg 1 . q $end
$upscope $end
$scope module ff2 $end
$var wire 1 & D $end
$var wire 1 # clk $end
$var wire 1 / qBar $end
$var wire 1 ! rst $end
$var reg 1 0 q $end
$upscope $end
$scope module ff3 $end
$var wire 1 ' D $end
$var wire 1 # clk $end
$var wire 1 1 qBar $end
$var wire 1 ! rst $end
$var reg 1 2 q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
02
11
00
1/
0.
1-
0,
1+
b1111 *
1)
b0 (
1'
1&
1%
b0 $
0#
b0 "
0!
$end
#5
1#
#10
0#
#15
1#
#20
0#
#25
1#
#30
0#
#35
1#
#40
0#
#45
0)
01
0/
0-
b0 *
0+
12
10
1.
b1111 "
b1111 $
b1111 (
1,
1#
1!
#50
0#
#55
0%
1)
b1 *
1+
b1110 "
b1110 $
b1110 (
0,
1#
#60
0#
#65
0)
1-
b10 *
0+
0.
b1101 "
b1101 $
b1101 (
1,
1#
#70
0#
#75
0&
1%
1)
b11 *
1+
b1100 "
b1100 $
b1100 (
0,
1#
#80
0#
#85
0)
1/
0-
b100 *
0+
00
1.
b1011 "
b1011 $
b1011 (
1,
1#
#90
0#
#95
0%
1)
b101 *
1+
b1010 "
b1010 $
b1010 (
0,
1#
#100
0#
#105
1&
1'
1%
11
b1111 *
1-
02
b0 "
b0 $
b0 (
0.
1#
0!
#110
0#
#115
1#
#120
0#
#125
0)
01
0/
0-
b0 *
0+
12
10
1.
b1111 "
b1111 $
b1111 (
1,
1#
1!
#130
0#
#135
0%
1)
b1 *
1+
b1110 "
b1110 $
b1110 (
0,
1#
#140
0#
#145
0)
1-
b10 *
0+
0.
b1101 "
b1101 $
b1101 (
1,
1#
#150
0#
#155
0&
1%
1)
b11 *
1+
b1100 "
b1100 $
b1100 (
0,
1#
#160
0#
#165
0)
1/
0-
b100 *
0+
00
1.
b1011 "
b1011 $
b1011 (
1,
1#
#170
0#
#175
0%
1)
b101 *
1+
b1010 "
b1010 $
b1010 (
0,
1#
#180
0#
#185
0)
1-
b110 *
0+
0.
b1001 "
b1001 $
b1001 (
1,
1#
#190
0#
#195
0'
1&
1%
1)
b111 *
1+
b1000 "
b1000 $
b1000 (
0,
1#
#200
0#
#205
0)
11
0/
0-
b1000 *
0+
02
10
1.
b111 "
b111 $
b111 (
1,
1#
#210
0#
#215
0%
1)
b1001 *
1+
b110 "
b110 $
b110 (
0,
1#
#220
0#
#225
0)
1-
b1010 *
0+
0.
b101 "
b101 $
b101 (
1,
1#
#230
0#
#235
0&
1%
1)
b1011 *
1+
b100 "
b100 $
b100 (
0,
1#
#240
0#
#245
0)
1/
0-
b1100 *
0+
00
1.
b11 "
b11 $
b11 (
1,
1#
#250
0#
#255
0%
1)
b1101 *
1+
b10 "
b10 $
b10 (
0,
1#
#260
0#
#265
